# Generated by Django 5.1.7 on 2025-07-31 13:05

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', models.CharField(max_length=3000)),
                ('publication_date', models.DateTimeField(auto_now_add=True)),
                ('modification_date', models.DateTimeField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AssignmentSubmit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=1000, null=True)),
                ('submit_date', models.DateTimeField(auto_now_add=True)),
                ('score', models.FloatField(null=True)),
                ('is_score_published', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ChoicesQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('number', models.IntegerField()),
                ('correct_answer_score', models.FloatField(null=True)),
                ('incorrect_answer_score', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=150)),
                ('size', models.IntegerField()),
                ('mime_type', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='FailedLoginAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('client_ip', models.CharField(max_length=128, null=True)),
                ('client_user_agent', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=50)),
                ('year', models.CharField(max_length=10)),
                ('archived', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ChoicesQuestionChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=500)),
                ('number', models.IntegerField()),
                ('is_correct', models.BooleanField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu_app.choicesquestion')),
            ],
        ),
        migrations.CreateModel(
            name='AssignmentSubmitDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu_app.assignmentsubmit')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='edu_app.document')),
            ],
        ),
        migrations.CreateModel(
            name='AnnouncementDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('announcement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu_app.announcement')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='edu_app.document')),
            ],
        ),
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('parent_folder', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='edu_app.folder')),
            ],
        ),
        migrations.AddField(
            model_name='document',
            name='folder',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='edu_app.folder'),
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('evaluation_criteria', models.CharField(max_length=3000, null=True)),
                ('theme', models.IntegerField(choices=[(0, 'Blue'), (1, 'Dark Blue'), (2, 'Green'), (3, 'Purple'), (4, 'Brown'), (5, 'Red'), (6, 'Orange'), (7, 'Yellow')])),
                ('archived', models.BooleanField(default=False)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='edu_app.group')),
            ],
        ),
        migrations.AddField(
            model_name='announcement',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu_app.group'),
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', models.CharField(max_length=3000)),
                ('kind', models.IntegerField(choices=[(0, 'Publication'), (1, 'Assignment'), (2, 'Amendment Edit'), (3, 'Amendment Delete')])),
                ('publication_date', models.DateTimeField(auto_now_add=True)),
                ('assignment_due_date', models.DateTimeField(null=True)),
                ('amendment_original_post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='edu_app.post')),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu_app.class')),
            ],
        ),
        migrations.AddField(
            model_name='assignmentsubmit',
            name='assignment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu_app.post'),
        ),
        migrations.CreateModel(
            name='PostDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='edu_app.document')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu_app.post')),
            ],
        ),
        migrations.CreateModel(
            name='Questionnaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mode', models.IntegerField(choices=[(0, 'Regular'), (1, 'Secret Answers')])),
                ('title', models.CharField(max_length=100)),
                ('archived', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('folder', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='edu_app.folder')),
            ],
        ),
        migrations.CreateModel(
            name='PostQuestionnaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu_app.post')),
                ('questionnaire', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='edu_app.questionnaire')),
            ],
        ),
        migrations.AddField(
            model_name='choicesquestion',
            name='questionnaire',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu_app.questionnaire'),
        ),
        migrations.CreateModel(
            name='AnnouncementQuestionnaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('announcement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu_app.announcement')),
                ('questionnaire', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='edu_app.questionnaire')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionnaireSubmit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('questionnaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu_app.questionnaire')),
            ],
        ),
        migrations.CreateModel(
            name='ChoicesQuestionAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu_app.choicesquestionchoice')),
                ('submit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu_app.questionnairesubmit')),
            ],
        ),
        migrations.AddField(
            model_name='assignmentsubmit',
            name='questionnaire_submit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='edu_app.questionnairesubmit'),
        ),
        migrations.CreateModel(
            name='TextQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('number', models.IntegerField()),
                ('questionnaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu_app.questionnaire')),
            ],
        ),
        migrations.CreateModel(
            name='TextQuestionAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=500)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu_app.textquestion')),
                ('submit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu_app.questionnairesubmit')),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu_app.class')),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='edu_app.unit'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('surname', models.CharField(max_length=50)),
                ('encrypted_password', models.CharField(max_length=120)),
                ('role', models.IntegerField(choices=[(0, 'Student'), (1, 'Teacher'), (2, 'Teacher Sysadmin'), (3, 'Teacher Leader')])),
                ('max_folders', models.IntegerField()),
                ('max_documents', models.IntegerField()),
                ('max_documents_size', models.IntegerField()),
                ('last_password_change', models.DateTimeField(null=True)),
                ('password_reset_token', models.CharField(max_length=30, null=True, unique=True)),
                ('archived', models.BooleanField(default=False)),
                ('student_group', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='edu_app.group')),
            ],
        ),
        migrations.AddField(
            model_name='questionnairesubmit',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu_app.user'),
        ),
        migrations.AddField(
            model_name='questionnaire',
            name='author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='edu_app.user'),
        ),
        migrations.AddField(
            model_name='post',
            name='author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='edu_app.user'),
        ),
        migrations.AddField(
            model_name='group',
            name='tutor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='edu_app.user'),
        ),
        migrations.AddField(
            model_name='folder',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu_app.user'),
        ),
        migrations.AddField(
            model_name='document',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu_app.user'),
        ),
        migrations.AddField(
            model_name='assignmentsubmit',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu_app.user'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='edu_app.user'),
        ),
        migrations.CreateModel(
            name='UserClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu_app.class')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu_app.user')),
            ],
        ),
        migrations.CreateModel(
            name='UserDocumentPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu_app.document')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu_app.user')),
            ],
        ),
        migrations.CreateModel(
            name='UserFolderPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('folder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu_app.folder')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu_app.user')),
            ],
        ),
        migrations.CreateModel(
            name='UserQuestionnairePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('questionnaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu_app.questionnaire')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu_app.user')),
            ],
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=30, unique=True)),
                ('one_time_token', models.CharField(max_length=30, unique=True)),
                ('one_time_token_already_used', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu_app.user')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='group',
            unique_together={('tag', 'year')},
        ),
    ]
